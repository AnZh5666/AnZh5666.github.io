{"version":3,"sources":["main2.js"],"names":["mySwiper","Swiper","loop","navigation","nextEl","prevEl","buttonCart","document","querySelector","modalCart","openModal","classList","add","remove","addEventListener","target","event","contains","closeModal","code","escapeHandler","scrollLinks","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","scrollLink","value","e","preventDefault","id","getAttribute","scrollIntoView","behavior","block","_iterator","Symbol","iterator","next","done","err","longGoodsList","result","regeneratorRuntime","async","_context","prev","awrap","fetch","sent","ok","status","abrupt","json","stop","createCard","_ref","label","name","img","description","price","card","createElement","className","innerHTML","concat","renderCards","data","textContent","cards","map","append","apply","_toConsumableArray","btnMore","getGoods","then","field","filter","good","link","dataset","filterCards","showAll","viewAll","forEach","elem","showClothing","item","showAccessories"],"mappings":"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","file":"main2.min.js","sourcesContent":["const mySwiper = new Swiper('.swiper-container', {\r\n\tloop: true,\r\n\r\n\t// Navigation arrows\r\n\tnavigation: {\r\n\t\tnextEl: '.slider-button-next',\r\n\t\tprevEl: '.slider-button-prev',\r\n\t},\r\n});\r\n\r\n// Создаем корзину\r\nconst buttonCart = document.querySelector('.button-cart');\r\nconst modalCart = document.querySelector('#modal-cart');\r\nconst modalCloseBtn = document.querySelector('.modal-close');\r\n\r\n// пишем функции при нажатии на кнопку корзины открывалось модальное окно\r\nconst openModal = () => {\r\n\tmodalCart.classList.add('show');\r\n};\r\nbuttonCart.addEventListener('click', openModal);\r\n// ================\r\n\r\n\r\n// пишем событие при нажатии за рамки окна и на крестик мдалка закрывается\r\nconst closeModal = () => {\r\n\tmodalCart.classList.remove('show');\r\n};\r\nmodalCart.addEventListener('click', (event) => {\r\n\tconst target = event.target;\r\n\tif(target.classList.contains('overlay') ||\r\n\ttarget.classList.contains('modal-close')) {\r\n\t\tcloseModal();\r\n\t}\r\n});\r\n//================\r\n\r\n\r\n// чобы при нажатии на Esc модлка закрывалась\r\nconst escapeHandler = (event) => {\r\n\tif(event.code === 'Escape') {\r\n\tcloseModal();\r\n\t};\r\n};\r\ndocument.addEventListener('keydown', escapeHandler);\r\n// ================\r\n\r\n\r\n// пишем функцию плавной прокрутки\r\n/* (function () {\r\nconst scrollLinks = document.querySelectorAll('a.scroll-link');\r\nfor (let i = 0; i < scrollLinks.length; i ++) {\r\n\tscrollLinks[i].addEventListener('click', (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst id = scrollLinks[i].getAttribute('href');\r\n\t\tdocument.querySelector(id).scrollIntoView({\r\n\t\t\tbehavior: 'smooth',\r\n\t\t\tblock: 'start',\r\n\t\t})\r\n\t});\r\n}\r\n})() */ // замыкание \r\n//================\r\n\r\n// Другой вариант функции для плавной прокрутки\r\n{\r\n\tconst scrollLinks = document.querySelectorAll('a.scroll-link');\r\n    for(const scrollLink of scrollLinks) {\r\n\tscrollLink.addEventListener('click', e => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tconst id = scrollLink.getAttribute('href');\r\n\t\tdocument.querySelector(id).scrollIntoView({\r\n\t\t\tbehavior: 'smooth',\r\n\t\t\tblock: 'start',\r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// Товары\r\nconst btnMore = document.querySelector('a.more');\r\nconst navLink = document.querySelectorAll('.navigation-link:not(.show-all');\r\nconst longGoodsList = document.querySelector('.long-goods-list');\r\n\r\n// пишем функцию получения данных с сервера\r\nconst getGoods = async function () {\r\n\tconst result = await fetch('db/db.json');\r\n\tif(!result.ok) {\r\n\t\tthrow 'Ошибка '+ result.status\r\n\t}\r\n\treturn result.json();\r\n}\r\n\r\n// пишем функцию создания карточек\r\nconst createCard = function({ label, name, img, description, id, price }) {\r\n\tconst card = document.createElement('div');\r\n\tcard.className = 'col-lg-3 col-sm-6';\r\n\t\r\n\tcard.innerHTML = `\r\n\t\t<div class=\"goods-card\">\r\n\t\t\t${label ?\r\n\t\t\t`<span class=\"label\">${label}</span>`\r\n\t\t\t: ''}\r\n\t\t\t\r\n\t\t\t<img src=\"db/${img}\" alt=\"image: Hoodie\" class=\"goods-image\">\r\n\t\t\t<h3 class=\"goods-title\">${name}</h3>\r\n\t\t\t<p class=\"goods-description\">${description}</p>\r\n\t\t\t<button class=\"button goods-card-btn add-to-cart\" data-id=${id}>\r\n\t\t\t\t<span class=\"button-price\">$${price}</span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t`;\r\n\treturn card;\r\n};\r\n\r\n\r\n// пишем функцию которая будет показывать карточки на странице\r\nconst renderCards = function(data) {\r\n\tlongGoodsList.textContent = '';\r\n\tconst cards = data.map(createCard);\r\n\t\r\n\tlongGoodsList.append(...cards);\r\n\t\r\n\tdocument.body.classList.add('show-goods')\r\n\t\r\n};\r\n\r\n\r\n// теперь передаем полученные с сервера товары в карточки\r\nbtnMore.addEventListener('click', e => {\r\n\te.preventDefault();\r\n\tgetGoods().then(renderCards);\r\n\t\r\n});\r\n\r\n// функция при нажатии на кнопку показать весь товар и после открытия всех карточек страница скролится вверх в начало\r\nbtnMore.addEventListener('click', () => {\r\n\tlet id = btnMore.getAttribute('href');\r\n\tdocument.querySelector(id).scrollIntoView({\r\n\t\tbehavior: 'smooth',\r\n\t\tblock: 'start',\r\n\t\t})\r\n});\r\n// ================\r\n\r\n\r\n// функция фильтрация для кнопок в нав панели\r\nconst filterCards = function (field, value) {\r\n\tgetGoods()\r\n\t.then(data => data.filter(good => good[field] === value))\r\n\t.then(renderCards);\r\n};\r\nnavLink.forEach(function(link) {\r\n\tlink.addEventListener('click', e => {\r\n\t\te.preventDefault();\r\n\t\tconst field = link.dataset.field;\r\n\t\tconst value = link.textContent;\r\n\t\tfilterCards(field, value)\r\n\t\t\r\n\t})\r\n})\r\n\r\n// Пишем функцию при нажатии на кнопку All показывает все товары\r\nconst showAll = document.querySelectorAll('.show-all');\r\nconst viewAll = e => {\r\n\te.preventDefault();\r\n\tgetGoods().then(renderCards);\r\n}\r\n\r\nshowAll.forEach(function(elem) {\r\n\telem.addEventListener('click', viewAll);\r\n});\r\n// ================\r\n\r\n// Пишем функцию при нажатии кнпок View all на отдельных карточка Аксессуары и Одежда, показывала весь их ассортимент\r\nconst showAccessories = document.querySelectorAll('.show-accessories');\r\nconst showClothing = document.querySelectorAll('.show-clothing');\r\n\r\nshowClothing.forEach(item => {\r\n\titem.addEventListener('click', e => {\r\n\te.preventDefault();\r\n\tfilterCards('category', 'Clothing')\r\n\t})\r\n});\r\nshowAccessories.forEach(item => {\r\n\titem.addEventListener('click', e => {\r\n\te.preventDefault();\r\n\tfilterCards('category', 'Accessories')\r\n\t})\r\n});\r\n// ================"]}