{"version":3,"sources":["main.js"],"names":["mySwiper","Swiper","loop","navigation","nextEl","prevEl","buttonCart","document","querySelector","modalCart","openModal","classList","add","cart","renderCart","closeModal","remove","addEventListener","target","event","contains","code","escapeHandler","scrollLinks","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","scrollLink","value","e","preventDefault","id","getAttribute","scrollIntoView","behavior","block","_iterator","Symbol","iterator","next","done","err","longGoodsList","result","regeneratorRuntime","async","_context","prev","awrap","fetch","sent","ok","status","abrupt","json","stop","createCard","_ref","label","name","img","description","price","card","createElement","className","innerHTML","concat","renderCards","data","textContent","cards","map","append","apply","_toConsumableArray","btnMore","getGoods","then","field","filter","good","link","dataset","filterCards","showAll","viewAll","forEach","elem","showClothing","item","showAccessories","cartTableGoods","cardTableTotal","this","cartGoods","_ref2","count","trGood","sum","totalPrice","deleteGood","minusGood","_step2","_iterator2","_iteratorNormalCompletion2","_step3","_iterator3","_iteratorNormalCompletion3","addCartGoods","_this","find","plusGood","_ref3","push","body","addTocart","closest"],"mappings":"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","file":"main.min.js","sourcesContent":["const mySwiper = new Swiper('.swiper-container', {\n\tloop: true,\n\n\t// Navigation arrows\n\tnavigation: {\n\t\tnextEl: '.slider-button-next',\n\t\tprevEl: '.slider-button-prev',\n\t},\n});\n\n// Создаем корзину\nconst buttonCart = document.querySelector('.button-cart');\nconst modalCart = document.querySelector('#modal-cart');\nconst modalCloseBtn = document.querySelector('.modal-close');\n\n// пишем функции при нажатии на кнопку корзины открывалось модальное окно\nconst openModal = () => {\n\tmodalCart.classList.add('show');\n\tcart.renderCart();\n};\nbuttonCart.addEventListener('click', openModal);\n// ================\n\n\n// пишем событие при нажатии за рамки окна и на крестик мдалка закрывается\nconst closeModal = () => {\n\tmodalCart.classList.remove('show');\n};\nmodalCart.addEventListener('click', (event) => {\n\tconst target = event.target;\n\tif(target.classList.contains('overlay') ||\n\ttarget.classList.contains('modal-close')) {\n\t\tcloseModal();\n\t}\n});\n//================\n\n\n// чобы при нажатии на Esc модлка закрывалась\nconst escapeHandler = (event) => {\n\tif(event.code === 'Escape') {\n\tcloseModal();\n\t};\n};\ndocument.addEventListener('keydown', escapeHandler);\n// ================\n\n\n// пишем функцию плавной прокрутки\n/* (function () {\nconst scrollLinks = document.querySelectorAll('a.scroll-link');\nfor (let i = 0; i < scrollLinks.length; i ++) {\n\tscrollLinks[i].addEventListener('click', (e) => {\n\t\te.preventDefault();\n\t\tconst id = scrollLinks[i].getAttribute('href');\n\t\tdocument.querySelector(id).scrollIntoView({\n\t\t\tbehavior: 'smooth',\n\t\t\tblock: 'start',\n\t\t})\n\t});\n}\n})() */ // замыкание \n//================\n\n// Другой вариант функции для плавной прокрутки\n{\n\tconst scrollLinks = document.querySelectorAll('a.scroll-link');\n    for(const scrollLink of scrollLinks) {\n\tscrollLink.addEventListener('click', e => {\n\t\te.preventDefault();\n\t\t\n\t\tconst id = scrollLink.getAttribute('href');\n\t\tdocument.querySelector(id).scrollIntoView({\n\t\t\tbehavior: 'smooth',\n\t\t\tblock: 'start',\n\t\t\t})\n\t\t});\n\t}\n}\n\n// Товары\nconst btnMore = document.querySelector('a.more');\nconst navLink = document.querySelectorAll('.navigation-link:not(.show-all');\nconst longGoodsList = document.querySelector('.long-goods-list');\n\n// пишем функцию получения данных с сервера\nconst getGoods = async function () {\n\tconst result = await fetch('db/db.json');\n\tif(!result.ok) {\n\t\tthrow 'Ошибка '+ result.status\n\t}\n\treturn result.json();\n}\n\n// пишем функцию создания карточек\nconst createCard = function({ label, name, img, description, id, price }) {\n\tconst card = document.createElement('div');\n\tcard.className = 'col-lg-3 col-sm-6';\n\t\n\tcard.innerHTML = `\n\t\t<div class=\"goods-card\">\n\t\t\t${label ?\n\t\t\t`<span class=\"label\">${label}</span>`\n\t\t\t: ''}\n\t\t\t\n\t\t\t<img src=\"db/${img}\" alt=\"image: Hoodie\" class=\"goods-image\">\n\t\t\t<h3 class=\"goods-title\">${name}</h3>\n\t\t\t<p class=\"goods-description\">${description}</p>\n\t\t\t<button class=\"button goods-card-btn add-to-cart\" data-id=${id}>\n\t\t\t\t<span class=\"button-price\">$${price}</span>\n\t\t\t</button>\n\t\t</div>\n\t`;\n\treturn card;\n};\n\n\n// пишем функцию которая будет показывать карточки на странице\nconst renderCards = function(data) {\n\tlongGoodsList.textContent = '';\n\tconst cards = data.map(createCard);\n\t\n\tlongGoodsList.append(...cards);\n\t\n\tdocument.body.classList.add('show-goods')\n\t\n};\n\n\n// теперь передаем полученные с сервера товары в карточки\nbtnMore.addEventListener('click', e => {\n\te.preventDefault();\n\tgetGoods().then(renderCards);\n\t\n});\n\n// функция при нажатии на кнопку показать весь товар и после открытия всех карточек страница скролится вверх в начало\nbtnMore.addEventListener('click', () => {\n\tlet id = btnMore.getAttribute('href');\n\tdocument.querySelector(id).scrollIntoView({\n\t\tbehavior: 'smooth',\n\t\tblock: 'start',\n\t\t})\n});\n// ================\n\n\n// функция фильтрация для кнопок в нав панели\nconst filterCards = function (field, value) {\n\tgetGoods()\n\t.then(data => data.filter(good => good[field] === value))\n\t.then(renderCards);\n};\nnavLink.forEach(function(link) {\n\tlink.addEventListener('click', e => {\n\t\te.preventDefault();\n\t\tconst field = link.dataset.field;\n\t\tconst value = link.textContent;\n\t\tfilterCards(field, value)\n\t\t\n\t})\n})\n\n// Пишем функцию при нажатии на кнопку All показывает все товары\nconst showAll = document.querySelectorAll('.show-all');\nconst viewAll = e => {\n\te.preventDefault();\n\tgetGoods().then(renderCards);\n}\n\nshowAll.forEach(function(elem) {\n\telem.addEventListener('click', viewAll);\n});\n// ================\n\n// Пишем функцию при нажатии кнпок View all на отдельных карточка Аксессуары и Одежда, показывала весь их ассортимент\nconst showAccessories = document.querySelectorAll('.show-accessories');\nconst showClothing = document.querySelectorAll('.show-clothing');\n\nshowClothing.forEach(item => {\n\titem.addEventListener('click', e => {\n\te.preventDefault();\n\tfilterCards('category', 'Clothing')\n\t})\n});\nshowAccessories.forEach(item => {\n\titem.addEventListener('click', e => {\n\te.preventDefault();\n\tfilterCards('category', 'Accessories')\n\t})\n});\n// ================\n\n\n// -----------------------------Управлние корзиной----------------------------\n\nconst cartTableGoods = document.querySelector('.cart-table__goods');\nconst cardTableTotal = document.querySelector('.card-table__total');\n\n//Создаем объект и назовем его CART\nconst cart = {\n\tcartGoods: [],\n\trenderCart(){\n\t\tcartTableGoods.textContent = '';\n\t\tthis.cartGoods.forEach(({id, name, price, count}) => {\n\t\t\tconst trGood = document.createElement('tr');\n\t\t\ttrGood.className = 'cart-item';\n\t\t\ttrGood.dataset.id = id;\n\t\t\ttrGood.innerHTML = `\n\t\t\t\t<td>${name}</td>\n\t\t\t\t<td>${price}</td>\n\t\t\t\t<td><button class=\"cart-btn-minus\" data-id=\"${id}\">-</button></td>\n\t\t\t\t<td>${count}</td>\n\t\t\t\t<td><button class=\"cart-btn-plus\" data-id=\"${id}\">+</button></td>\n\t\t\t\t<td>${price * count}</td>\n\t\t\t\t<td><button class=\"cart-btn-delete\" data-id=\"${id}\">x</button></td>\n\t\t\t`;\n\t\t\tcartTableGoods.append(trGood);\n\t\t});\n\n\n\n// Выводим на кнопке корзины количество товаров содержащихся в ней\nconst cartCount\t= document.querySelector('.cart-count');\n\n\t\n// ИСпользуем метод reduise для вывода итоговой суммы\nconst totalPrice = this.cartGoods.reduce((sum, item) => {\n\treturn sum + (item.price * item.count);\n\t}, 0)\n\tcardTableTotal.textContent = totalPrice + '$';\n\t\n\t},\n\tdeleteGood(id){\n\t\tthis.cartGoods = this.cartGoods.filter(item => id !== item.id);\n\t\tthis.renderCart();\n\t},\n\tminusGood(id){\n\t\tfor (const item of this.cartGoods) {\n\t\t\tif (item.id === id) {\n\t\t\t\tif(item.count <= 1) {\n\t\t\t\t\tthis.deleteGood(id)\n\t\t\t\t} else {\n\t\t\t\t\titem.count--;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.renderCart();\t\n\t},\n\tplusGood(id){\n\t\tfor (const item of this.cartGoods) {\n\t\t\tif (item.id === id) {\n\t\t\t\titem.count++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.renderCart();\n\t},\n\taddCartGoods(id){\n\t\tconst goodItem = this.cartGoods.find(item => item.id === id);\n\t\tif (goodItem) {\n\t\t\tthis.plusGood(id);\n\t\t} else {\n\t\t\tgetGoods()\n\t\t\t.then(data => data.find(item => item.id === id))\n\t\t\t.then(({ id, name, price }) => {\n\t\t\t\tthis.cartGoods.push({\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tprice,\n\t\t\t\t\tcount: 1 \n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t},\n}\n\ndocument.body.addEventListener('click', e => {\n\tconst addTocart = e.target.closest('.add-to-cart');\n\t\tif(addTocart) {\n\t\tcart.addCartGoods(addTocart.dataset.id)\n\t}\n})\n\n/* cart.renderCart(); */ // вызывать эту функцию будем в openModal\n// cart.deleteGood('090');\n\ncartTableGoods.addEventListener('click', e => {\n\tconst target = e.target;\n\tif (target.classList.contains('cart-btn-delete')) {\n\t\tcart.deleteGood(target.dataset.id);\n\t};\n\tif (target.classList.contains('cart-btn-minus')) {\n\t\tcart.minusGood(target.dataset.id);\n\t};\n\tif (target.classList.contains('cart-btn-plus')) {\n\t\tcart.plusGood(target.dataset.id);\n\t};\n})\n//================"]}