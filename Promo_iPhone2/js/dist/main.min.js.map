{"version":3,"sources":["main.js"],"names":["document","addEventListener","cardDetailChange","cardDetailsTitle","cardImageItem","cardDetailsPrice","descriptionMemory","data","diactive","btn","accordion","parent","description","modalTitle","body","target","escapeHandler","url","callback","request","crossSellList","allGoods","wrapRender","close","button","dropDown","classList","remove","style","height","event","closeAllDrops","modal","add","textContent","modalTitleSubmit","value","modalSubtitle","dataset","buttonBuy","closeModal","cardDetailsButtonBuy","querySelector","render","arr","forEach","item","append","good","picture","photo","name","price","liItem","createElement","innerHTML","concat","createCrossSellItem","querySelectorAll","img","memory","i","contains","alt","characteristicsList","characteristicsItem","elem","children","closest","openModal","splice","removeEventListener","fn","count","counter","shuffle","sort","apply","wrapper","parseInt","goods","length","Math","random","fourItem","XMLHttpRequest","open","send","readyState","status","response","JSON","parse","console","getData","amenu"],"mappings":"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","file":"main.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    'use strict';  /* Запускает код в строгом режиме, т.е. не позволяет \r\n    запустить с ошибками и не объявленными переменными */  \r\n\r\n    /* Пишем функцию  обращения к data base серверa через JSON  */\r\n    \r\n    const getData = (url, callback) => {\r\n       const request = new XMLHttpRequest();\r\n       request.open('GET', url);\r\n       request.send();\r\n\r\n       request.addEventListener('readystatechange', () => {\r\n         if(request.readyState !== 4) return;\r\n         if (request.status === 200) {\r\n            const response = JSON.parse(request.response);\r\n           callback(response); \r\n                 } else {\r\n                    console.error(new Error('Ошибка ' + request.status));\r\n         }\r\n       });\r\n    };\r\n\r\n   /*  getData('cross-sell-dbase/dbase.json', (data) => {\r\n      console.log(data);\r\n    }); */\r\n\r\n        /* ПИШЕМ ВТОРОЙ ВАРИАНТ ТАБОВ */\r\n    const tabs = () => {\r\n        /* Получем переменные по классам */\r\n        const cardDetailChange = document.querySelectorAll('.card-detail__change');\r\n        const cardDetailsTitle = document.querySelector('.card-details__title');\r\n        const cardImageItem = document.querySelector('.card__image_item');\r\n        const cardDetailsPrice = document.querySelector('.card-details__price');\r\n        const descriptionMemory = document.querySelector('.description__memory');\r\n        /* в переменных выбираем все карточки и один заголовок, одно описание, одну картинку и одну цену */\r\n        /* -- -- */\r\n\r\n        /* Создаем несколько массивов каждый из которых будет относится к одному из модели телефонов */\r\n        /* Создаем массив \"DATA\" который будет содержать все наши телефоны */\r\n        const data = [\r\n            {\r\n              name: 'Смартфон Apple iPhone 12 Pro 128GB Graphite',\r\n              img: '../img/iPhone-graphite.png',\r\n              price: 99990,  \r\n              memory: 128  \r\n            },\r\n            {\r\n              name: 'Смартфон Apple iPhone 12 Pro 256GB Silver',\r\n              img: '../img/iPhone-silver.png',\r\n              price: 120000,   \r\n              memory: 256\r\n            },\r\n            {\r\n               name: 'Смартфон Apple iPhone 12 Pro 128GB Pacific Blue',\r\n               img: '../img/iPhone-blue.png',\r\n               price: 98699,\r\n               memory: 128\r\n            }\r\n        ];\r\n        \r\n        /* Пишем функцию которая будет перебирать кнопки и убирать у них active */\r\n        const diactive = () => {\r\n          cardDetailChange.forEach(btn => btn.classList.remove('active'))\r\n        };\r\n      \r\n        /* После массива пишем функцию for each чтобы его перебирать */ \r\n      cardDetailChange.forEach((btn, i) => {\r\n        btn.addEventListener('click', () => {\r\n            if(!btn.classList.contains('active')) {\r\n               diactive();\r\n                btn.classList.add('active');\r\n                cardDetailsTitle.textContent = data[i].name;\r\n                cardImageItem.src = data[i].img;\r\n                cardImageItem.alt = data[i].name; \r\n                cardDetailsPrice.textContent = data[i].price + '₽';\r\n                descriptionMemory.textContent = `Встроенная память (ROM) ${data[i].memory} Гб`;\r\n            }\r\n        });\r\n      })\r\n    \r\n    };\r\n    /* пишем функцию аккордиона */\r\n    const accordion = () => {\r\n      const characteristicsList = document.querySelector('.characteristics__list');\r\n      const characteristicsItem = document.querySelectorAll('.characteristics__item');\r\n\r\n        const open = (button, dropDown) => {\r\n          closeAllDrops (button, dropDown);\r\n          dropDown.style.height = `${dropDown.scrollHeight}px`;\r\n          button.classList.add('active');\r\n          dropDown.classList.add('active');\r\n        };\r\n        const close = (button, dropDown) => {\r\n          button.classList.remove('active');\r\n          dropDown.classList.remove('active');\r\n          dropDown.style.height = '';\r\n        };\r\n        const closeAllDrops = (button, dropDown) => {\r\n          characteristicsItem.forEach((elem) => {\r\n            if(elem.children[0] !== button && elem.children[1] !==dropDown) {\r\n              close(elem.children[0], elem.children[1]);\r\n            }\r\n          })\r\n        }\r\n        \r\n        characteristicsList.addEventListener('click', (event) => {\r\n           const target = event.target;\r\n           if(target.classList.contains('characteristics__title')) {\r\n              \r\n            const parent = target.closest('.characteristics__item');\r\n            const description = parent.querySelector('.characteristics__description');\r\n             \r\n             description.classList.contains('active') ? \r\n               close(target, description) : \r\n                  open(target, description);\r\n            }\r\n        });\r\n        document.body.addEventListener('click', (event) => {\r\n          const target = event.target;\r\n          if (!target.closest('.characteristics__list')) {\r\n            closeAllDrops();\r\n          };\r\n        })\r\n    }; \r\n    /* Пишем функцию чтобы при нажатии на кнопку открывалось модальное окно */\r\n      const modal = () => {\r\n        const cardDetailsButtonBuy = document.querySelector('.card-details__button_buy');\r\n        const cardDetailsButtonDelivery = document.querySelector('.card-details__button_delivery');\r\n        const modal = document.querySelector('.modal');\r\n        const cardDetailsTitle = document.querySelector('.card-details__title');\r\n        const modalTitle = document.querySelector('.modal__title');\r\n        const modalSubtitle = modal.querySelector('.modal_subtitle');\r\n        const modalTitleSubmit = modal.querySelector('.modal__title-submit');\r\n         \r\n        const openModal = (event) => {\r\n          const target =event.target;\r\n          modal.classList.add('open');\r\n          document.addEventListener('keydown', escapeHandler);\r\n          /* чтобы при нажатии на кнопку в модальном окне менялось название телефона */\r\n          modalTitle.textContent = cardDetailsTitle.textContent;\r\n          modalTitleSubmit.value = cardDetailsTitle.textContent;\r\n          modalSubtitle.textContent = target.dataset.buttonBuy;\r\n        };\r\n        const closeModal = () => {\r\n          modal.classList.remove('open');\r\n          document.removeEventListener('keydown', escapeHandler);/* при нажатии на Esc закрывается модальное окно */\r\n        };\r\n        const escapeHandler = (event) => {\r\n          if(event.code === 'Escape') {\r\n            closeModal();\r\n          };\r\n        };\r\n       \r\n        /* чтобы при нажатии на крестик в модальном окне оно закрывалось */\r\n        modal.addEventListener('click', (event) => {\r\n          const target = event.target;\r\n          if(target.classList.contains('modal__close') || target === modal) {\r\n            closeModal();\r\n          }\r\n        });\r\n        cardDetailsButtonBuy.addEventListener('click', openModal);\r\n        cardDetailsButtonDelivery.addEventListener('click', openModal);\r\n      }\r\n\r\n      /* Пишем функцию render cross-sell */\r\n      const renderCrossSell = () => {\r\n        const COUNT_ROW_GOODS = 4;\r\n        const crossSellList = document.querySelector('.cross-sell__list');\r\n        const allGoods = [];\r\n        let wrapRender = null;\r\n        /* внутри пишем функцию которая будет перемешивать массив с товаром */\r\n        const shuffle = arr => arr.sort(() => Math.random() - 0.5);\r\n        const crossSellAdd = document.querySelector('.cross-sell__add');\r\n        \r\n        \r\n        const createCrossSellItem = (good) => {\r\n          const { photo: picture, name, price } = good;\r\n\r\n          const liItem = document.createElement('li');\r\n          liItem.innerHTML = `\r\n          <article class=\"cross-sell__item\">\r\n\t\t\t\t\t\t\t<img class=\"cross-sell__image\" src=\"${picture}\" alt=\"\">\r\n\t\t\t\t\t\t\t<h3 class=\"cross-sell__title\">${name}</h3>\r\n\t\t\t\t\t\t\t<p class=\"cross-sell__price\">${price}₽</p>\r\n\t\t\t\t\t\t\t<div class=\"button button_buy cross-sell__button\">Купить</div>\r\n\t\t\t\t\t\t</article>\r\n          `;\r\n          return liItem;\r\n        };\r\n\r\n        const render = arr => {\r\n         arr.forEach(item => {\r\n              crossSellList.append(createCrossSellItem(item));\r\n           })    \r\n        }\r\n\r\n        const wrapper = (fn, count) => {\r\n          let counter = 0\r\n          return (...args) => {\r\n            if(counter === count) return;\r\n            counter++;\r\n            return fn(...args) \r\n          }\r\n        };\r\n        \r\n        /* фукция которая будет принимать список товаров и перемешивать их в рандомном порядке */\r\n        const createCrossSellList = (goods) => {\r\n          wrapRender = wrapper(render, parseInt(goods.length/COUNT_ROW_GOODS)+1)\r\n          allGoods.push(...shuffle(goods));\r\n          const fourItem = allGoods.splice(0, COUNT_ROW_GOODS);\r\n          wrapRender(fourItem);\r\n        };\r\n\r\n        crossSellAdd.addEventListener('click', () => {\r\n          wrapRender(allGoods.splice(0, COUNT_ROW_GOODS));\r\n        })\r\n\r\n        getData('cross-sell-dbase/dbase.json', createCrossSellList);\r\n       }\r\n\r\n\r\n       tabs();\r\n       accordion(); \r\n       modal();\r\n       renderCrossSell();\r\n       amenu('.header__menu', '.header-menu__list', '.header-menu__item', '.header-menu__burger');\r\n       \r\n\r\n});"]}